"use strict";

var itemsUrl = 'https://api.parse.com/1/classes/items';

//create new angular module
angular.module('FoodApp', [])
	.config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'bAO3og2I0SZxhlE7N1TC0yTNGjEYx677VvlKXmRh';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'rIN4tjOwmDQlyeJHn6L8CQhhpzv6OECF81ZVKEWo';
    })
    .controller('FoodController', function($scope, $http) {
        $scope.siganos = siganos;
        $scope.hotdawgs = hotdawgs;
        $scope.motosurf = motosurf;
        $scope.redsquarebbq = redsquarebbq;

        //adds item to "my orders" 
        $scope.additem = function (item) {
            $scope.loading = true;
            $http.post(itemsUrl, item)
                .success(function (responseData) {
                    $scope.item.objectId = responseData.objectId;
                    $scope.items.push($scope.item);
                })
                .error(function (err) {
                    $scope.errorMessage = err;
                })
                .finally(function () {
                    $scope.loading = false;
                });
        };

        // - increment the count of an item if is clicked and is already contained
        //  in $scope.items array (need to traverse through $scope.items to see if we have a match)

        //updates the subtotal and total price of users' orders
        $scope.refreshItems = function () {
            $scope.loading = true;
            $http.get(itemsUrl)
                .success(function (data) {
                    $scope.items = data.results;
                    var subtotal = 0;
                    console.log(data.results);
                    data.results.forEach( function (item) {
                        if(item.price == null)
                        {
                            subtotal += 0;
                        } else {
                            subtotal += (item.price);
                        }
                    });
                    var total = subtotal * 1.10;
                    document.getElementById('subtotal').innerHTML = '$' + subtotal.toFixed(2);
                    document.getElementById('total').innerHTML = '$' + total.toFixed(2);
                })
                .error(function (err) {
                    $scope.errorMessage = err;
                })
                .finally(function () {
                    $scope.loading = false;
                });
        };

        //deletes item from the menu if the 'x' button is clicked
        $scope.deleteitem = function (item) {
            $http.delete(itemsUrl + '/' + item.objectId)
                .success(function (responseData) {
                    $scope.refreshItems();
                })
                .error(function (err) {
                    console.log(err);
                })
                .finally(function () {
                    //nothing needed
                })
        };

        $scope.refreshItems();

    });

$(document).ready(function() {
    //scrolls user to the top from bottom of screen 
    $('.scrollToTop').click(function(eventObject){
        $('html, body').animate({
            scrollTop : 0
        }, 700);
        eventObject.preventDefault(); 
    });

    //animated scroll tos ections 
    $('nav a, p').click(function(eventObject) { 
        $('html, body').animate({
            scrollTop: 0
        }, 700);
        eventObject.preventDefault(); 
    });

    //alerts user that their item has been added to the cart 
    $(".item").on("click", function() { 
        alert("This has been added to your orders! Click on 'My Orders' to view what you've ordered so far. If you wish to remove something from your orders, you must do so from the My Orders page.");
    }); 

    var nav = $('nav');
    var navTop = nav.offset().top;
    var navHeight = nav.outerHeight();

    document.getElementById('submit-order').addEventListener('click', function() {
        document.getElementById('#success-order').style.display = 'block';
        setTimeout(function() {
            $('#success-order').fadeOut("slow");
        }, 3000);
    });
});
